@model Ticket
@{
    var seats = ViewData["Seats"] as IEnumerable<Seat>;   
}
<style>
    .seat-block {
        width: 45px;
        height: 45px;
        border: 1px solid #ccc;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .seat-block.available:hover {
            cursor: pointer;
            border: 2px #ff6a00 ;
        }

    .available {
        background-color: #007bff; /* Change this to your desired color for selected seats */
        color: #fff;
    }

    .selected {
        background-color: #ffc107; /* Change this to your desired color for selected seats */
        color: #000;
    }

    .unavailable {
        background-color: #ccc;
        color: #000;
    }
</style>
<div class="container mt-5" style="min-height:840px">
    <h3 class="text-primary"> Please choose your favorite seats</h3><hr />
    <div class="table-responsive">
        <!-- Display Room Layout-->
        <table class="table table-bordered w-100 text-center">
            <thead>
                <tr>
                    <th colspan="100%" class="align-content-center">
                        <div class="d-flex justify-content-center text-black">
                            <hr style="height: 20px; width: 50%;" />

                        </div>
                    </th>
                </tr>
                <tr>
                    @*<th></th>*@
                    @{
                        int maxCol = 0;
                        if (seats.Count() > 0)
                        {
                            maxCol = seats.Max(s => int.Parse(s.SeatName.Substring(1)));
                        }

                        @*for (int col = 1; col <= maxCol; col++)
                            {
                                <th>@col</th>
                            }*@
                    }
                </tr>
            </thead>

            <tbody>
                @{
                    var rowLetters = seats.Select(s => s.SeatName.Substring(0, 1)).Distinct().OrderBy(c => c);
                }

                @foreach (var rowLetter in rowLetters)
                {
                    <tr class="">
                        @for (int col = 1; col <= maxCol; col++)
                        {
                            var seat = seats.FirstOrDefault(s => s.SeatName == rowLetter + col);
                            var seatId = seat != null ? seat.SeatID : Guid.Empty;
                            <td>
                                @if (seat != null)
                                {
                                    var showtimeID = ViewData["ShowtimeID"] as string;
                                    <div class="seat-block w-100  @(!seat.SeatStatus.ToLower().Contains(showtimeID.ToLower()) || seat.SeatStatus.ToUpper() == "available"  ? "available" : "unavailable")" id="@(seatId)">
                                        <span>@(rowLetter + col)</span>
                                    </div>
                                }

                           </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="d-flex justify-content-end">
        
            <button  class="btn btn-outline-success btn-process">Process</button>
    </div>
   
</div>
@section Scripts {
    <script type="text/javascript">
        var selectedSeats = [];

        $(document).ready(function () {
            $('.seat-block.available').click(function () {
                $(this).toggleClass('selected');
                var seatId = $(this).attr('id');

                if ($(this).hasClass('selected')) {
                    selectedSeats.push(seatId); // Add selected seat to the array
                } else {
                    var index = selectedSeats.indexOf(seatId);
                    if (index !== -1) {
                        selectedSeats.splice(index, 1); // Remove deselected seat from the array
                    }
                }

                console.log(selectedSeats); // Display selected seats in the console (optional)
            });
            $(".btn-process").click(function () {
                var urlParams = new URLSearchParams(window.location.search);               
                var showtime_id = urlParams.get('showtime_id');                 
                $.ajax({
                    url: '/Customer/Ticket/BookingConfirmation',
                    traditional: true,
                    type: 'GET',
                    contextType: 'application/json',
                    data: {
                        seatIDList: selectedSeats,
                        showtime_id : showtime_id
                    },
                    success: function (response) {
                       if (data.success) {
                            window.location.href = "/Customer/Home";
                        } else {
                    //        console.log("Error");
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle error
                    }
                });
            })
            
        });
    </script>
    
}